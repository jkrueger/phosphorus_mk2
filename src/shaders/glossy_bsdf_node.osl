
shader
glossy_bsdf_node
  [[ string help = "Glossy BSDF material" ]]
(
  string distribution = "ggx"
    [[ string help = "The microfacet distribution to use",
       string widget = "popup",
       string options = "sharp|ggx" ]],

  color Cs = 1
    [[  string help = "Base color",
        float min = 0, float max = 1 ]],

  normal shadingNormal = N
    [[ string help = "The normal used for shading calculations" ]],
        
  float eta = 0.5
    [[  string help = "Index of Refraction" ]],

  float roughness = 0
    [[  string help = "Roughness of the plastic",
        float min = 0, float max = 1 ]],

  int refract = 0,
    [[ string help = "Indicates whether the resulting closure refracts or not" ]]

  output closure color Cout = 0
    [[ string help = "Output color" ]]
)
{
  // float r2 = roughness * roughness;
  float r2 = roughness;

  if (distribution == "sharp" || roughness == 0.0) {
    Cout = Cs * reflection(shadingNormal, eta);
  }
  else {
    Cout = Cs * microfacet(distribution, shadingNormal, vector(0), r2, r2, eta, refract);
  }
}
